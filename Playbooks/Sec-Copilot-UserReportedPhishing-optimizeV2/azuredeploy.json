{
    "$schema":  "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion":  "1.0.0.0",
    "parameters":  {
        "PlaybookName":  {
            "defaultValue":  "<PlaybookName>",
            "type":  "string"

        },
        "TenantID": {
            "defaultValue": "<TenantID>",
            "type": "string"
        },
        "ClientID": {
            "defaultValue": "<M365 API ClientID>",
            "type": "string"
        },
        "Secret": {
            "defaultValue": "<M365 API Secret>",
            "type": "string"
        }
    },
    "variables":  {
        "ConversionserviceConnectionName":  "[concat('Conversionservice-', parameters('PlaybookName'))]",
        "Office365ConnectionName":  "[concat('Office365-', parameters('PlaybookName'))]",
        "SecuritycopilotConnectionName":  "[concat('Securitycopilot-', parameters('PlaybookName'))]"
    },
    "resources":  [
        {
            "properties":  {
                "provisioningState":  "Succeeded",
                "state":  "Enabled",
                "definition":  {
                    "$schema":  "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                    "contentVersion":  "1.0.0.0",
                    "parameters":  {
                        "$connections":  {
                            "defaultValue":  {
                            },
                            "type":  "Object"
                        }
                    },
                    "triggers":  {
                        "When_a_new_email_arrives_(V3)":  {
                            "splitOn":  "@triggerBody()?['value']",
                            "type":  "ApiConnectionNotification",
                            "inputs":  {
                                "fetch":  {
                                    "method":  "get",
                                    "pathTemplate":  {
                                        "template":  "/v3/Mail/OnNewEmail"
                                    },
                                    "queries":  {
                                        "fetchOnlyWithAttachment":  false,
                                        "folderPath":  "Inbox",
                                        "importance":  "Any",
                                        "includeAttachments":  false
                                    }
                                },
                                "host":  {
                                    "connection":  {
                                        "name":  "@parameters('$connections')['office365']['connectionId']"
                                    }
                                },
                                "subscribe":  {
                                    "body":  {
                                        "NotificationUrl":  "@{listCallbackUrl()}"
                                    },
                                    "method":  "post",
                                    "pathTemplate":  {
                                        "template":  "/GraphMailSubscriptionPoke/$subscriptions"
                                    },
                                    "queries":  {
                                        "fetchOnlyWithAttachment":  false,
                                        "folderPath":  "Inbox",
                                        "importance":  "Any"
                                    }
                                }
                            }
                        }
                    },
                    "actions":  {
                        "Domain_reputation_MDTI":  {
                            "runAfter":  {
                                "Triage_this_email":  [
                                    "Succeeded"
                                ]
                            },
                            "type":  "ApiConnection",
                            "inputs":  {
                                "body":  {
                                    "PromptContent":  "Return the reputation for all the domains and IP addresses in the e-mail besides https://security.microsoft.com/userSubmissionsReportMessage, include the sender domain @{body('Parse_JSON')?['from']}(this should be the string that is coming after the @ sign)",
                                    "SessionId":  "@body('Triage_this_email')?['sessionId']",
                                    "SkillName":  "GetReputationsForIndicators"
                                },
                                "host":  {
                                    "connection":  {
                                        "name":  "@parameters('$connections')['securitycopilot_1']['connectionId']"
                                    }
                                },
                                "method":  "post",
                                "path":  "/process-prompt"
                            }
                        },
                        "HTTP_click_on_this_email":  {
                            "runAfter":  {
                                "who_got_this_email":  [
                                    "Succeeded"
                                ]
                            },
                            "type":  "Http",
                            "inputs":  {
                                "authentication": {
                                            "audience": "https://api.security.microsoft.com",
                                            "clientId": "[parameters('ClientID')]",
                                            "secret": "[parameters('Secret')]",
                                            "tenant": "[parameters('TenantID')]",
                                            "type": "ActiveDirectoryOAuth"
                                        },
                                "body":  {
                                    "Query":  "let email = EmailEvents | where Subject == '@{body('Parse_JSON')?['subject']}' and SenderFromAddress == '@{body('Parse_JSON')?['from']}' | project NetworkMessageId; let urls = EmailUrlInfo | join email on NetworkMessageId| project Url; UrlClickEvents| join urls on Url | summarize UsersWhoClicked = dcount(AccountUpn)"
                                },
                                "headers":  {
                                    "Content-Type":  "application/json"
                                },
                                "method":  "POST",
                                "uri":  "https://api.security.microsoft.com/api/advancedHunting/run"
                            }
                        },
                        "Html_to_text":  {
                            "runAfter":  {
                                "Parse_JSON":  [
                                    "Succeeded"
                                ]
                            },
                            "type":  "ApiConnection",
                            "inputs":  {
                                "body":  "\u003cp\u003e@{body('Parse_JSON')}\u003c/p\u003e",
                                "host":  {
                                    "connection":  {
                                        "name":  "@parameters('$connections')['conversionservice']['connectionId']"
                                    }
                                },
                                "method":  "post",
                                "path":  "/html2text"
                            }
                        },
                        "Look_up_relevant_articles":  {
                            "runAfter":  {
                                "Domain_reputation_MDTI":  [
                                    "Succeeded"
                                ]
                            },
                            "type":  "ApiConnection",
                            "inputs":  {
                                "body":  {
                                    "PromptContent":  "Check if we have MDTI articles associated with any of the ip addresses, domains, or e-mail addresses, Only return articles relevant to indicators in the e-mail. You must not return articles that are not relevant",
                                    "SessionId":  "@body('Domain_reputation_MDTI')?['sessionId']",
                                    "SkillName":  "GetArticlesIndicators"
                                },
                                "host":  {
                                    "connection":  {
                                        "name":  "@parameters('$connections')['securitycopilot_1']['connectionId']"
                                    }
                                },
                                "method":  "post",
                                "path":  "/process-prompt"
                            }
                        },
                        "Parse_JSON":  {
                            "runAfter":  {
                            },
                            "type":  "ParseJson",
                            "inputs":  {
                                "content":  "@triggerBody()",
                                "schema":  {
                                    "properties":  {
                                        "attachments":  {
                                            "type":  "array"
                                        },
                                        "bccRecipients":  {
                                        },
                                        "body":  {
                                            "type":  "string"
                                        },
                                        "bodyPreview":  {
                                            "type":  "string"
                                        },
                                        "ccRecipients":  {
                                        },
                                        "conversationId":  {
                                            "type":  "string"
                                        },
                                        "from":  {
                                            "type":  "string"
                                        },
                                        "hasAttachments":  {
                                            "type":  "boolean"
                                        },
                                        "id":  {
                                            "type":  "string"
                                        },
                                        "importance":  {
                                            "type":  "string"
                                        },
                                        "internetMessageId":  {
                                            "type":  "string"
                                        },
                                        "isHtml":  {
                                            "type":  "boolean"
                                        },
                                        "isRead":  {
                                            "type":  "boolean"
                                        },
                                        "receivedDateTime":  {
                                            "type":  "string"
                                        },
                                        "replyTo":  {
                                        },
                                        "subject":  {
                                            "type":  "string"
                                        },
                                        "toRecipients":  {
                                            "type":  "string"
                                        }
                                    },
                                    "type":  "object"
                                }
                            }
                        },
                        "Summarize_findings":  {
                            "runAfter":  {
                                "who_click":  [
                                    "Succeeded"
                                ]
                            },
                            "type":  "ApiConnection",
                            "inputs":  {
                                "body":  {
                                    "PromptContent":  "Above was an investigation performed by a security analyst to determine if an e-mail was a phishing attempt. As part of the investigation, we check against microsoft defender advance hunting logs who else from our organization received this email  by running this query \n\nEmailEvents\n| where Subject == '@{body('Parse_JSON')?['subject']}'\n\nand we got the above results:\n@{body('who_got_this_email')?['Results']}\n\n\nThan we checked in advance hunting defender logs, who else click on this email \nBy running the above query \n            let email = EmailEvents\n            | where Subject == '@{body('Parse_JSON')?['subject']}' and SenderFromAddress == '@{body('Parse_JSON')?['from']}'\n            | project NetworkMessageId;\n            let urls = EmailUrlInfo\n            | join email on NetworkMessageId\n            | project Url;\n            UrlClickEvents\n            | join urls on Url\n            | summarize UsersWhoClicked = dcount(AccountUpn)\n\nAnd received  the above results :\n@{body('who_click')?['Results']}\n\nInclude the above results and Summarize this investigation with all the steps taken, share and decide if this is a phishing email. Share certainty percentage: if the email is not suspicious give it 0-30% if it medium suspicious give it 30%-74% and if its highly suspicious give it 75%-100%, you **must** include suspicious certainty percentage.\n\nformat the answer with bolt bpoints, like the baove example:\n\n\nhigh level overview on the mail indictors including the sender domain, receiver, send time, message id:\n\nSender Email Domain: @{body('Parse_JSON')?['from']}\ntoRecipients: @{body('Parse_JSON')?['toRecipients']}\nreceivedDateTime: @{body('Parse_JSON')?['receivedDateTime']}\nid: @{body('Parse_JSON')?['id']}\n\nMDTI Findings:\nAdd the MDTI finding, including articles and TI indictors  if you find.\nArticles:\nArticle 1: Link to Article 1\nArticle 2: Link to Article 2\nThreat Intelligence Indicators:\nIP Addresses: \nURLs: \nFile Hashes: \n\nExplain about who else receive this email and who else click on it:\nRecipients and Click Activity:\nOther Recipients: \nClick Activity:\n\n\nSummary and Scoring:\n\nSummarize the percentage scoring   \nPhishing Email Score: 75%-100%\nRisk Level: \nRecommended Action: ",
                                    "SessionId":  "@body('Look_up_relevant_articles')?['sessionId']",
                                    "SkillName":  "SummarizeData"
                                },
                                "host":  {
                                    "connection":  {
                                        "name":  "@parameters('$connections')['securitycopilot_1']['connectionId']"
                                    }
                                },
                                "method":  "post",
                                "path":  "/process-prompt"
                            }
                        },
                        "Triage_this_email":  {
                            "runAfter":  {
                                "Html_to_text":  [
                                    "Succeeded"
                                ]
                            },
                            "type":  "ApiConnection",
                            "inputs":  {
                                "body":  {
                                    "PromptContent":  "/AskGPT Triage the following email and point out what you find suspicious?. Ignore this URL https://security.microsoft.com/userSubmissionsReportMessage. Investigate the Message-ID for any inconsistencies or signs of spoofing. Use inputs: email body:@{body('Html_to_text')} , sender emailL@{body('Parse_JSON')?['from']}, reciver email:@{body('Parse_JSON')?['toRecipients']}, messageId:@{body('Parse_JSON')?['internetMessageId']}, emailSubject:@{body('Parse_JSON')?['subject']},Email receivedDateTime:@{body('Parse_JSON')?['receivedDateTime']}, importance:@{body('Parse_JSON')?['importance']}"
                                },
                                "host":  {
                                    "connection":  {
                                        "name":  "@parameters('$connections')['securitycopilot_1']['connectionId']"
                                    }
                                },
                                "method":  "post",
                                "path":  "/process-prompt"
                            }
                        },
                        "who_click":  {
                            "runAfter":  {
                                "HTTP_click_on_this_email":  [
                                    "Succeeded"
                                ]
                            },
                            "type":  "ParseJson",
                            "inputs":  {
                                "content":  "@body('HTTP_click_on_this_email')",
                                "schema":  {
                                    "properties":  {
                                        "Results":  {
                                            "items":  {
                                                "properties":  {
                                                    "UsersWhoClicked":  {
                                                        "type":  "integer"
                                                    }
                                                },
                                                "required":  [
                                                    "UsersWhoClicked"
                                                ],
                                                "type":  "object"
                                            },
                                            "type":  "array"
                                        },
                                        "Schema":  {
                                            "items":  {
                                                "properties":  {
                                                    "Name":  {
                                                        "type":  "string"
                                                    },
                                                    "Type":  {
                                                        "type":  "string"
                                                    }
                                                },
                                                "required":  [
                                                    "Name",
                                                    "Type"
                                                ],
                                                "type":  "object"
                                            },
                                            "type":  "array"
                                        },
                                        "Stats":  {
                                            "properties":  {
                                                "ExecutionTime":  {
                                                    "type":  "number"
                                                },
                                                "dataset_statistics":  {
                                                    "items":  {
                                                        "properties":  {
                                                            "table_row_count":  {
                                                                "type":  "integer"
                                                            },
                                                            "table_size":  {
                                                                "type":  "integer"
                                                            }
                                                        },
                                                        "required":  [
                                                            "table_row_count",
                                                            "table_size"
                                                        ],
                                                        "type":  "object"
                                                    },
                                                    "type":  "array"
                                                },
                                                "resource_usage":  {
                                                    "properties":  {
                                                        "cache":  {
                                                            "properties":  {
                                                                "disk":  {
                                                                },
                                                                "memory":  {
                                                                }
                                                            },
                                                            "type":  "object"
                                                        },
                                                        "cpu":  {
                                                            "properties":  {
                                                                "kernel":  {
                                                                    "type":  "string"
                                                                },
                                                                "total cpu":  {
                                                                    "type":  "string"
                                                                },
                                                                "user":  {
                                                                    "type":  "string"
                                                                }
                                                            },
                                                            "type":  "object"
                                                        },
                                                        "memory":  {
                                                            "properties":  {
                                                                "peak_per_node":  {
                                                                    "type":  "integer"
                                                                }
                                                            },
                                                            "type":  "object"
                                                        }
                                                    },
                                                    "type":  "object"
                                                }
                                            },
                                            "type":  "object"
                                        }
                                    },
                                    "type":  "object"
                                }
                            }
                        },
                        "who_got_this_email":  {
                            "runAfter":  {
                                "who_other_send_this_email":  [
                                    "Succeeded"
                                ]
                            },
                            "type":  "ParseJson",
                            "inputs":  {
                                "content":  "@body('who_other_send_this_email')",
                                "schema":  {
                                    "properties":  {
                                        "Results":  {
                                            "items":  {
                                                "properties":  {
                                                    "RecipientEmailAddress":  {
                                                        "type":  "string"
                                                    },
                                                    "SenderDisplayName":  {
                                                        "type":  "string"
                                                    },
                                                    "SenderFromAddress":  {
                                                        "type":  "string"
                                                    },
                                                    "SenderIPv4":  {
                                                        "type":  "string"
                                                    },
                                                    "TimeGenerated":  {
                                                        "type":  "string"
                                                    }
                                                },
                                                "required":  [
                                                    "SenderDisplayName",
                                                    "SenderFromAddress",
                                                    "RecipientEmailAddress",
                                                    "SenderIPv4",
                                                    "TimeGenerated"
                                                ],
                                                "type":  "object"
                                            },
                                            "type":  "array"
                                        },
                                        "Schema":  {
                                            "items":  {
                                                "properties":  {
                                                    "Name":  {
                                                        "type":  "string"
                                                    },
                                                    "Type":  {
                                                        "type":  "string"
                                                    }
                                                },
                                                "required":  [
                                                    "Name",
                                                    "Type"
                                                ],
                                                "type":  "object"
                                            },
                                            "type":  "array"
                                        },
                                        "Stats":  {
                                            "properties":  {
                                                "ExecutionTime":  {
                                                    "type":  "number"
                                                },
                                                "dataset_statistics":  {
                                                    "items":  {
                                                        "properties":  {
                                                            "table_row_count":  {
                                                                "type":  "integer"
                                                            },
                                                            "table_size":  {
                                                                "type":  "integer"
                                                            }
                                                        },
                                                        "required":  [
                                                            "table_row_count",
                                                            "table_size"
                                                        ],
                                                        "type":  "object"
                                                    },
                                                    "type":  "array"
                                                },
                                                "resource_usage":  {
                                                    "properties":  {
                                                        "cache":  {
                                                            "properties":  {
                                                                "disk":  {
                                                                },
                                                                "memory":  {
                                                                }
                                                            },
                                                            "type":  "object"
                                                        },
                                                        "cpu":  {
                                                            "properties":  {
                                                                "kernel":  {
                                                                    "type":  "string"
                                                                },
                                                                "total cpu":  {
                                                                    "type":  "string"
                                                                },
                                                                "user":  {
                                                                    "type":  "string"
                                                                }
                                                            },
                                                            "type":  "object"
                                                        },
                                                        "memory":  {
                                                            "properties":  {
                                                                "peak_per_node":  {
                                                                    "type":  "integer"
                                                                }
                                                            },
                                                            "type":  "object"
                                                        }
                                                    },
                                                    "type":  "object"
                                                }
                                            },
                                            "type":  "object"
                                        }
                                    },
                                    "type":  "object"
                                }
                            }
                        },
                        "who_other_send_this_email":  {
                            "runAfter":  {
                                "Look_up_relevant_articles":  [
                                    "Succeeded"
                                ]
                            },
                            "type":  "Http",
                            "inputs":  {
                                "authentication":  {
                                            "audience": "https://api.security.microsoft.com",
                                            "clientId": "[parameters('ClientID')]",
                                            "secret": "[parameters('Secret')]",
                                            "tenant": "[parameters('TenantID')]",
                                            "type": "ActiveDirectoryOAuth"
                                },
                                "body":  {
                                    "Query":  "EmailEvents | where Subject == '@{body('Parse_JSON')?['subject']}' | summarize by SenderDisplayName, SenderFromAddress,  RecipientEmailAddress, SenderIPv4 , TimeGenerated"
                                },
                                "headers":  {
                                    "Content-Type":  "application/json"
                                },
                                "method":  "POST",
                                "uri":  "https://api.security.microsoft.com/api/advancedHunting/run"
                            }
                        }
                    },
                    "outputs":  {
                    }
                },
                "parameters":  {
                    "$connections":  {
                        "value":  {
                            "conversionservice":  {
                                "connectionId":  "[resourceId('Microsoft.Web/connections', variables('ConversionserviceConnectionName'))]",
                                "connectionName":  "[variables('ConversionserviceConnectionName')]",
                                "id":  "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/Conversionservice')]"
                            },
                            "office365":  {
                                "connectionId":  "[resourceId('Microsoft.Web/connections', variables('Office365ConnectionName'))]",
                                "connectionName":  "[variables('Office365ConnectionName')]",
                                "id":  "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/Office365')]"
                            },
                            "securitycopilot_1":  {
                                "connectionId":  "[resourceId('Microsoft.Web/connections', variables('SecuritycopilotConnectionName'))]",
                                "connectionName":  "[variables('SecuritycopilotConnectionName')]",
                                "id":  "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/Securitycopilot')]"
                            }
                        }
                    }
                }
            },
            "name":  "[parameters('PlaybookName')]",
            "type":  "Microsoft.Logic/workflows",
            "location":  "[resourceGroup().location]",
            "tags":  {
                "Created By":  "Yaniv Shasha",
                "CreatedDate":  "5/17/2024 4:19:09 PM",
                "CreatorUPN":  ""
            },
            "apiVersion":  "2017-07-01",
            "dependsOn":  [
                "[resourceId('Microsoft.Web/connections', variables('ConversionserviceConnectionName'))]",
                "[resourceId('Microsoft.Web/connections', variables('Office365ConnectionName'))]",
                "[resourceId('Microsoft.Web/connections', variables('SecuritycopilotConnectionName'))]"
            ]
        },
        {
            "type":  "Microsoft.Web/connections",
            "apiVersion":  "2016-06-01",
            "name":  "[variables('ConversionserviceConnectionName')]",
            "location":  "[resourceGroup().location]",
            "kind":  "V1",
            "properties":  {
                "displayName":  "[variables('ConversionserviceConnectionName')]",
                "customParameterValues":  {
                },
                "api":  {
                    "id":  "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/Conversionservice')]"
                }
            }
        },
        {
            "type":  "Microsoft.Web/connections",
            "apiVersion":  "2016-06-01",
            "name":  "[variables('Office365ConnectionName')]",
            "location":  "[resourceGroup().location]",
            "kind":  "V1",
            "properties":  {
                "displayName":  "[variables('Office365ConnectionName')]",
                "customParameterValues":  {
                },
                "api":  {
                    "id":  "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/Office365')]"
                }
            }
        },
        {
            "type":  "Microsoft.Web/connections",
            "apiVersion":  "2016-06-01",
            "name":  "[variables('SecuritycopilotConnectionName')]",
            "location":  "[resourceGroup().location]",
            "kind":  "V1",
            "properties":  {
                "displayName":  "[variables('SecuritycopilotConnectionName')]",
                "customParameterValues":  {
                },
                "api":  {
                    "id":  "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/Securitycopilot')]"
                }
            }
        }
    ]
}
